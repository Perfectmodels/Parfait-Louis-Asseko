#!/usr/bin/env node

/**
 * Script de d√©marrage rapide pour la migration
 * Guide l'utilisateur √† travers le processus de migration
 */

import { execSync } from 'child_process';
import readline from 'readline';

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

function question(query) {
    return new Promise(resolve => rl.question(query, resolve));
}

async function startMigration() {
    console.log('üöÄ Migration Perfect Models: Firebase vers Neon Database');
    console.log('=======================================================');
    console.log('');
    
    console.log('üìã √âtapes de la migration:');
    console.log('1. Configuration des variables d\'environnement');
    console.log('2. Test des connexions');
    console.log('3. Migration des donn√©es');
    console.log('4. V√©rification des r√©sultats');
    console.log('');
    
    const proceed = await question('Voulez-vous commencer la migration ? (y/N): ');
    
    if (proceed.toLowerCase() !== 'y' && proceed.toLowerCase() !== 'yes') {
        console.log('‚ùå Migration annul√©e');
        rl.close();
        return;
    }
    
    try {
        // √âtape 1: Configuration
        console.log('\nüîß √âtape 1: Configuration des variables d\'environnement');
        console.log('=======================================================');
        
        const configExists = await question('Avez-vous d√©j√† configur√© les variables d\'environnement ? (y/N): ');
        
        if (configExists.toLowerCase() !== 'y' && configExists.toLowerCase() !== 'yes') {
            console.log('üìù Lancement de la configuration...');
            execSync('npm run setup', { stdio: 'inherit' });
        }
        
        // √âtape 2: Test des connexions
        console.log('\nüîç √âtape 2: Test des connexions');
        console.log('===============================');
        
        const testConnections = await question('Voulez-vous tester les connexions ? (Y/n): ');
        
        if (testConnections.toLowerCase() !== 'n' && testConnections.toLowerCase() !== 'no') {
            console.log('üß™ Test des connexions en cours...');
            execSync('npm run test', { stdio: 'inherit' });
        }
        
        // √âtape 3: Migration
        console.log('\nüöÄ √âtape 3: Migration des donn√©es');
        console.log('=================================');
        
        const migrateData = await question('Voulez-vous lancer la migration ? (Y/n): ');
        
        if (migrateData.toLowerCase() !== 'n' && migrateData.toLowerCase() !== 'no') {
            console.log('üì¶ Migration en cours...');
            execSync('npm run migrate', { stdio: 'inherit' });
        }
        
        // √âtape 4: V√©rification
        console.log('\n‚úÖ √âtape 4: V√©rification des r√©sultats');
        console.log('=====================================');
        
        const verifyResults = await question('Voulez-vous v√©rifier les r√©sultats ? (Y/n): ');
        
        if (verifyResults.toLowerCase() !== 'n' && verifyResults.toLowerCase() !== 'no') {
            console.log('üîç V√©rification en cours...');
            execSync('npm run test', { stdio: 'inherit' });
        }
        
        console.log('\nüéâ Migration termin√©e avec succ√®s !');
        console.log('===================================');
        console.log('');
        console.log('üìä Prochaines √©tapes:');
        console.log('1. Tester votre application avec Neon Database');
        console.log('2. Configurer les backups automatiques');
        console.log('3. Optimiser les requ√™tes si n√©cessaire');
        console.log('4. Surveiller les performances');
        console.log('');
        console.log('üìö Documentation: docs/MIGRATION_GUIDE.md');
        
    } catch (error) {
        console.error('‚ùå Erreur lors de la migration:', error.message);
        console.log('');
        console.log('üõ†Ô∏è D√©pannage:');
        console.log('1. V√©rifiez les variables d\'environnement');
        console.log('2. V√©rifiez les connexions Firebase et Neon');
        console.log('3. Consultez les logs d√©taill√©s');
        console.log('4. Consultez la documentation: docs/MIGRATION_GUIDE.md');
    }
    
    rl.close();
}

// Ex√©cuter le script
if (import.meta.url === `file://${process.argv[1]}`) {
    startMigration();
}

export { startMigration };
